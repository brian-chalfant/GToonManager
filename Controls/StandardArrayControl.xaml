<UserControl x:Class="GToonManager.Controls.StandardArrayControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:GToonManager.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800">
    
    <UserControl.Resources>
        <converters:ValueToVisibilityConverter x:Key="ValueToVisibilityConverter"/>
        <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- Medieval Theme Styles -->
        <Style x:Key="AbilityHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Garamond"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryRed}"/>
        </Style>
        
        <Style x:Key="AbilityValueStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Garamond"/>
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryGold}"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="1"/>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="AssignButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryRed}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryGold}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGold}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="FontFamily" Value="Garamond"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="MinWidth" Value="45"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Gold" BlurRadius="5" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ClearButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource DarkRed}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryGold}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGold}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="FontFamily" Value="Garamond"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Content" Value="Clear"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Gold" BlurRadius="5" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Medieval Panel Style -->
        <Style x:Key="MedievalPanelStyle" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource PanelBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGold}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Padding" Value="15"/>
        </Style>
        
        <!-- Main Action Button Style -->
        <Style x:Key="MedievalActionButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource PrimaryRed}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryGold}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGold}"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="FontFamily" Value="Garamond"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="25,12"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Typography.Capitals" Value="AllSmallCaps"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryGold}"/>
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryRed}"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Gold" BlurRadius="10" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFD700"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid Margin="10" Background="{DynamicResource MedievalBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Collapsed View (when applied) -->
        <Border Grid.RowSpan="4" Background="{DynamicResource PanelBackground}" 
                BorderBrush="{DynamicResource PrimaryGold}" BorderThickness="3" 
                CornerRadius="8" Padding="20" 
                Visibility="{Binding IsApplied, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,15">
                    <TextBlock Text="⚔️ Standard Array Applied ⚔️" FontFamily="Garamond" FontSize="18" FontWeight="Bold" 
                               Foreground="{DynamicResource PrimaryRed}" VerticalAlignment="Center" Margin="0,0,20,0"/>
                    <Button Content="🔄 Edit Assignment" 
                            Command="{Binding ResetStandardArrayCommand}"
                            Style="{StaticResource ClearButtonStyle}"/>
                </StackPanel>
                
                <TextBlock Text="Your ability scores have been set using the standard array values (15, 14, 13, 12, 10, 8)." 
                           HorizontalAlignment="Center" FontFamily="Garamond" FontStyle="Italic" 
                           FontSize="14" Foreground="{DynamicResource PrimaryRed}" Opacity="0.8"/>
            </StackPanel>
        </Border>
        
        <!-- Expanded View (when not applied) -->
        <Grid Grid.RowSpan="4" Visibility="{Binding IsExpanded, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!-- Header -->
            <Border Grid.Row="0" Background="{DynamicResource PrimaryRed}" Padding="20,15" Margin="0,0,0,20">
                <Border BorderBrush="{DynamicResource PrimaryGold}" BorderThickness="2" CornerRadius="8" Padding="15">
                    <StackPanel>
                        <TextBlock Text="⚔️ Standard Array Assignment ⚔️" FontFamily="Garamond" FontSize="24" FontWeight="Bold" 
                                   HorizontalAlignment="Center" Foreground="{DynamicResource PrimaryGold}">
                            <TextBlock.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="3" ShadowDepth="2"/>
                            </TextBlock.Effect>
                        </TextBlock>
                        <TextBlock Text="Assign the standard array values (15, 14, 13, 12, 10, 8) to your ability scores" 
                                   FontFamily="Garamond" FontSize="16" HorizontalAlignment="Center" 
                                   Foreground="{DynamicResource PrimaryGold}" Opacity="0.9" Margin="0,5,0,0"/>
                                   
                        <!-- Class Recommendation Section -->
                        <Border Background="{DynamicResource PanelBackground}" 
                                BorderBrush="{DynamicResource PrimaryGold}" BorderThickness="2" 
                                CornerRadius="6" Padding="15" Margin="0,15,0,0">
                            <StackPanel>
                                <TextBlock Text="🏰 Class Recommendation (Optional)" FontFamily="Garamond" 
                                           FontWeight="Bold" FontSize="16" Foreground="{DynamicResource PrimaryRed}" 
                                           HorizontalAlignment="Center" Margin="0,0,0,15"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ComboBox Grid.Column="0" 
                                              ItemsSource="{Binding Classes}"
                                              SelectedItem="{Binding SelectedClass}"
                                              DisplayMemberPath="Name" 
                                              Background="{DynamicResource ControlBackground}"
                                              Foreground="{DynamicResource PrimaryRed}"
                                              BorderBrush="{DynamicResource PrimaryGold}"
                                              BorderThickness="2"
                                              FontFamily="Garamond"
                                              FontWeight="SemiBold"
                                              Padding="10" Margin="0,0,10,0"/>
                                    <Button Grid.Column="1" Content="⚡ Auto-Assign" 
                                            Command="{Binding ApplyClassRecommendationCommand}"
                                            Style="{StaticResource MedievalActionButtonStyle}"/>
                                </Grid>
                                
                                <!-- Recommendation Selection (only visible if multiple recommendations available) -->
                                <Grid Visibility="{Binding HasMultipleRecommendations, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,10,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="🎯 Build:" VerticalAlignment="Center" Margin="0,0,10,0"
                                               FontFamily="Garamond" FontWeight="Bold" Foreground="{DynamicResource PrimaryRed}"/>
                                    <ComboBox Grid.Column="1" ItemsSource="{Binding AvailableRecommendations}"
                                              SelectedItem="{Binding SelectedRecommendation}"
                                              DisplayMemberPath="Name"
                                              Background="{DynamicResource ControlBackground}"
                                              Foreground="{DynamicResource PrimaryRed}"
                                              BorderBrush="{DynamicResource PrimaryGold}"
                                              BorderThickness="2"
                                              FontFamily="Garamond"
                                              FontWeight="SemiBold"
                                              Padding="10"/>
                                </Grid>
                                
                                <!-- Recommendation Preview -->
                                <Border Background="{DynamicResource ControlBackground}" BorderBrush="{DynamicResource PrimaryGold}" 
                                        BorderThickness="1" CornerRadius="4" Padding="12" Margin="0,10,0,0"
                                        Visibility="{Binding HasSelectedRecommendation, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <StackPanel>
                                        <TextBlock Text="📊 Preview:" FontWeight="Bold" FontFamily="Garamond"
                                                   Foreground="{DynamicResource PrimaryRed}" FontSize="12" Margin="0,0,0,5"/>
                                        <TextBlock Text="{Binding RecommendationPreviewText}" FontFamily="Garamond"
                                                   Foreground="{DynamicResource PrimaryRed}" FontSize="12" TextWrapping="Wrap"/>
                                        <TextBlock Text="{Binding SelectedRecommendation.Description}" FontFamily="Garamond"
                                                   Foreground="{DynamicResource PrimaryRed}" FontSize="11" FontStyle="Italic" 
                                                   TextWrapping="Wrap" Margin="0,5,0,0"
                                                   Visibility="{Binding HasSelectedRecommendation, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    </StackPanel>
                                </Border>
                                
                                <TextBlock Text="{Binding ClassRecommendationText}" 
                                           FontFamily="Garamond" FontStyle="Italic" 
                                           Foreground="{DynamicResource PrimaryRed}" Opacity="0.7" 
                                           HorizontalAlignment="Center" Margin="0,10,0,0"
                                           Visibility="{Binding HasClassRecommendation, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>
            </Border>
            
            <!-- Available Values -->
            <Border Grid.Row="1" Background="{DynamicResource PanelBackground}" 
                    BorderBrush="{DynamicResource PrimaryGold}" BorderThickness="2" 
                    CornerRadius="8" Padding="20" Margin="0,0,0,20">
                <StackPanel>
                    <TextBlock Text="🎲 Available Values:" FontFamily="Garamond" FontWeight="Bold" 
                               FontSize="18" Foreground="{DynamicResource PrimaryRed}" 
                               HorizontalAlignment="Center" Margin="0,0,0,15"/>
                    <ItemsControl ItemsSource="{Binding StandardArray.AvailableValues}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Background="{DynamicResource PrimaryRed}" 
                                        BorderBrush="{DynamicResource PrimaryGold}" 
                                        BorderThickness="2" CornerRadius="6"
                                        Margin="5" Padding="12,8">
                                    <TextBlock Text="{Binding}" Foreground="{DynamicResource PrimaryGold}" 
                                               FontFamily="Garamond" FontWeight="Bold" FontSize="18"/>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <TextBlock Text="📜 All values have been assigned" FontFamily="Garamond" 
                               FontStyle="Italic" Foreground="{DynamicResource PrimaryRed}" 
                               Opacity="0.7" HorizontalAlignment="Center" Margin="0,10,0,0"
                               Visibility="{Binding StandardArray.AvailableValues.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                </StackPanel>
            </Border>
            
            <!-- Ability Score Assignment Grid -->
            <UniformGrid Grid.Row="2" Columns="3" Rows="2" Margin="0,0,0,20">
                
                <!-- Strength -->
                <Border Style="{StaticResource MedievalPanelStyle}">
                    <StackPanel>
                        <TextBlock Text="💪 Strength" Style="{StaticResource AbilityHeaderStyle}"/>
                        <TextBlock Text="{Binding StandardArray.StrengthValue}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource AbilityValueStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StandardArray.StrengthValue}" Value="0">
                                            <Setter Property="Text" Value="—"/>
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryRed}"/>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                        <!-- Assignment Buttons -->
                        <WrapPanel HorizontalAlignment="Center" Margin="0,10,0,0">
                            <ItemsControl ItemsSource="{Binding StandardArray.AvailableValues}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Content="{Binding}" Style="{StaticResource AssignButtonStyle}"
                                                Command="{Binding DataContext.AssignStrengthCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </WrapPanel>
                        
                        <Button Style="{StaticResource ClearButtonStyle}" Margin="0,10,0,0"
                                Command="{Binding ClearAssignmentCommand}" CommandParameter="Strength"
                                Visibility="{Binding StandardArray.StrengthValue, Converter={StaticResource ValueToVisibilityConverter}}"/>
                    </StackPanel>
                </Border>
                
                <!-- Dexterity -->
                <Border Style="{StaticResource MedievalPanelStyle}">
                    <StackPanel>
                        <TextBlock Text="🏹 Dexterity" Style="{StaticResource AbilityHeaderStyle}"/>
                        <TextBlock Text="{Binding StandardArray.DexterityValue}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource AbilityValueStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StandardArray.DexterityValue}" Value="0">
                                            <Setter Property="Text" Value="—"/>
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryRed}"/>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                        <!-- Assignment Buttons -->
                        <WrapPanel HorizontalAlignment="Center" Margin="0,10,0,0">
                            <ItemsControl ItemsSource="{Binding StandardArray.AvailableValues}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Content="{Binding}" Style="{StaticResource AssignButtonStyle}"
                                                Command="{Binding DataContext.AssignDexterityCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </WrapPanel>
                        
                        <Button Style="{StaticResource ClearButtonStyle}" Margin="0,10,0,0"
                                Command="{Binding ClearAssignmentCommand}" CommandParameter="Dexterity"
                                Visibility="{Binding StandardArray.DexterityValue, Converter={StaticResource ValueToVisibilityConverter}}"/>
                    </StackPanel>
                </Border>
                
                <!-- Constitution -->
                <Border Style="{StaticResource MedievalPanelStyle}">
                    <StackPanel>
                        <TextBlock Text="❤️ Constitution" Style="{StaticResource AbilityHeaderStyle}"/>
                        <TextBlock Text="{Binding StandardArray.ConstitutionValue}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource AbilityValueStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StandardArray.ConstitutionValue}" Value="0">
                                            <Setter Property="Text" Value="—"/>
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryRed}"/>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                        <!-- Assignment Buttons -->
                        <WrapPanel HorizontalAlignment="Center" Margin="0,10,0,0">
                            <ItemsControl ItemsSource="{Binding StandardArray.AvailableValues}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Content="{Binding}" Style="{StaticResource AssignButtonStyle}"
                                                Command="{Binding DataContext.AssignConstitutionCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </WrapPanel>
                        
                        <Button Style="{StaticResource ClearButtonStyle}" Margin="0,10,0,0"
                                Command="{Binding ClearAssignmentCommand}" CommandParameter="Constitution"
                                Visibility="{Binding StandardArray.ConstitutionValue, Converter={StaticResource ValueToVisibilityConverter}}"/>
                    </StackPanel>
                </Border>
                
                <!-- Intelligence -->
                <Border Style="{StaticResource MedievalPanelStyle}">
                    <StackPanel>
                        <TextBlock Text="📚 Intelligence" Style="{StaticResource AbilityHeaderStyle}"/>
                        <TextBlock Text="{Binding StandardArray.IntelligenceValue}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource AbilityValueStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StandardArray.IntelligenceValue}" Value="0">
                                            <Setter Property="Text" Value="—"/>
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryRed}"/>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                        <!-- Assignment Buttons -->
                        <WrapPanel HorizontalAlignment="Center" Margin="0,10,0,0">
                            <ItemsControl ItemsSource="{Binding StandardArray.AvailableValues}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Content="{Binding}" Style="{StaticResource AssignButtonStyle}"
                                                Command="{Binding DataContext.AssignIntelligenceCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </WrapPanel>
                        
                        <Button Style="{StaticResource ClearButtonStyle}" Margin="0,10,0,0"
                                Command="{Binding ClearAssignmentCommand}" CommandParameter="Intelligence"
                                Visibility="{Binding StandardArray.IntelligenceValue, Converter={StaticResource ValueToVisibilityConverter}}"/>
                    </StackPanel>
                </Border>
                
                <!-- Wisdom -->
                <Border Style="{StaticResource MedievalPanelStyle}">
                    <StackPanel>
                        <TextBlock Text="🦉 Wisdom" Style="{StaticResource AbilityHeaderStyle}"/>
                        <TextBlock Text="{Binding StandardArray.WisdomValue}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource AbilityValueStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StandardArray.WisdomValue}" Value="0">
                                            <Setter Property="Text" Value="—"/>
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryRed}"/>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                        <!-- Assignment Buttons -->
                        <WrapPanel HorizontalAlignment="Center" Margin="0,10,0,0">
                            <ItemsControl ItemsSource="{Binding StandardArray.AvailableValues}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Content="{Binding}" Style="{StaticResource AssignButtonStyle}"
                                                Command="{Binding DataContext.AssignWisdomCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </WrapPanel>
                        
                        <Button Style="{StaticResource ClearButtonStyle}" Margin="0,10,0,0"
                                Command="{Binding ClearAssignmentCommand}" CommandParameter="Wisdom"
                                Visibility="{Binding StandardArray.WisdomValue, Converter={StaticResource ValueToVisibilityConverter}}"/>
                    </StackPanel>
                </Border>
                
                <!-- Charisma -->
                <Border Style="{StaticResource MedievalPanelStyle}">
                    <StackPanel>
                        <TextBlock Text="✨ Charisma" Style="{StaticResource AbilityHeaderStyle}"/>
                        <TextBlock Text="{Binding StandardArray.CharismaValue}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource AbilityValueStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StandardArray.CharismaValue}" Value="0">
                                            <Setter Property="Text" Value="—"/>
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryRed}"/>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                        <!-- Assignment Buttons -->
                        <WrapPanel HorizontalAlignment="Center" Margin="0,10,0,0">
                            <ItemsControl ItemsSource="{Binding StandardArray.AvailableValues}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Content="{Binding}" Style="{StaticResource AssignButtonStyle}"
                                                Command="{Binding DataContext.AssignCharismaCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </WrapPanel>
                        
                        <Button Style="{StaticResource ClearButtonStyle}" Margin="0,10,0,0"
                                Command="{Binding ClearAssignmentCommand}" CommandParameter="Charisma"
                                Visibility="{Binding StandardArray.CharismaValue, Converter={StaticResource ValueToVisibilityConverter}}"/>
                    </StackPanel>
                </Border>
            </UniformGrid>
            
            <!-- Action Buttons -->
            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Content="⚔️ Apply to Character" 
                        Command="{Binding ApplyStandardArrayCommand}"
                        Style="{StaticResource MedievalActionButtonStyle}"
                        IsEnabled="{Binding StandardArray.IsComplete}"/>
                
                <Button Content="🔄 Reset All" 
                        Command="{Binding ResetStandardArrayCommand}"
                        Style="{StaticResource ClearButtonStyle}"
                        FontSize="16" Padding="25,12" Margin="10"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl> 